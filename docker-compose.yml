# version: '3.8'

services:
  # # ====== BACKEND ======
  # backend:
  #   build: 
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - ENVIRONMENT=development
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_DB=${POSTGRES_DB_LOCAL}
  #     - POSTGRES_USER=${POSTGRES_USER_LOCAL}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_LOCAL}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #     - SCALEWAY_API_KEY=${SCALEWAY_API_KEY}
  #     - SCALEWAY_PROJECT_ID=${SCALEWAY_PROJECT_ID}
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - ./backend:/app
  #   networks:
  #     - hackathon-network

  # # ====== FRONTEND ======
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    # depends_on:
    #   - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - hackathon-network

  # ====== DATABASES ======
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: smart_tracker
      POSTGRES_USER: smart_tracker_user
      POSTGRES_PASSWORD: smart_tracker_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U smart_tracker_user -d smart_tracker"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - hackathon-network


  # ====== DEVELOPMENT TOOLS ======
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@smarttracker.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - hackathon-network

volumes:
  postgres_data:

networks:
  hackathon-network:
    driver: bridge